SET(LIB_NAME osgVerseWrappers)
FILE(GLOB GENERIC_OSG_FILES generic_osg/*.cpp)

SET(LIBRARY_INCLUDE_FILES
    Export.h
)
SET(LIBRARY_FILES ${LIBRARY_INCLUDE_FILES}
    DracoWrapper.cpp RewrapperLoader.cpp ${GENERIC_OSG_FILES}
)

IF(OSG_MAJOR_VERSION GREATER 2 AND OSG_MINOR_VERSION GREATER 4)
    SET(LIBRARY_FILES ${LIBRARY_FILES}
        WrapperMethods.cpp Geometry_FixedWrapper.cpp)
ENDIF()

INCLUDE_DIRECTORIES(. ../script)
ADD_DEFINITIONS(-DVERSE_WRAPPERS_LIBRARY)
IF(DRACO_FOUND)
    ADD_DEFINITIONS(-DVERSE_USE_DRACO)
ENDIF(DRACO_FOUND)

IF(VERSE_STATIC_BUILD)
    NEW_LIBRARY(${LIB_NAME} STATIC)
ELSE()
    NEW_LIBRARY(${LIB_NAME} SHARED)
ENDIF()

TARGET_COMPILE_OPTIONS(${LIB_NAME} PUBLIC -D_SCL_SECURE_NO_WARNINGS)
TARGET_LINK_LIBRARIES(${LIB_NAME} osgVerseDependency osgVerseModeling osgVerseScript
                      osgVerseAnimation osgVersePipeline osgVerseAI osgVerseReaderWriter)
LINK_OSG_LIBRARY(${LIB_NAME} OpenThreads osg osgDB osgUtil osgGA osgViewer)

INSTALL(TARGETS ${LIB_NAME} EXPORT ${LIB_NAME}
        RUNTIME DESTINATION ${INSTALL_BINDIR} COMPONENT libosgverse
        LIBRARY DESTINATION ${INSTALL_LIBDIR} COMPONENT libosgverse
        ARCHIVE DESTINATION ${INSTALL_ARCHIVEDIR} COMPONENT libosgverse-dev)
INSTALL(FILES ${LIBRARY_INCLUDE_FILES} DESTINATION ${INSTALL_INCDIR}/osgVerse/wrappers COMPONENT libosgverse-dev)
